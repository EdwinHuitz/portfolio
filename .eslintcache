[{"C:\\Users\\edwin\\Documents\\GitHub\\code\\react\\portfolio\\src\\index.js":"1","C:\\Users\\edwin\\Documents\\GitHub\\code\\react\\portfolio\\src\\reportWebVitals.js":"2","C:\\Users\\edwin\\Documents\\GitHub\\code\\react\\portfolio\\src\\App.js":"3","C:\\Users\\edwin\\Documents\\GitHub\\code\\react\\portfolio\\src\\components\\navbar.jsx":"4","C:\\Users\\edwin\\Documents\\GitHub\\code\\react\\portfolio\\src\\components\\footer.jsx":"5","C:\\Users\\edwin\\Documents\\GitHub\\code\\react\\portfolio\\src\\pages\\portfolio.jsx":"6","C:\\Users\\edwin\\Documents\\GitHub\\code\\react\\portfolio\\src\\pages\\weather.jsx":"7"},{"size":610,"mtime":1608074609087,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":520,"mtime":1608664267626,"results":"11","hashOfConfig":"9"},{"size":2019,"mtime":1608830754371,"results":"12","hashOfConfig":"9"},{"size":549,"mtime":1608694012086,"results":"13","hashOfConfig":"9"},{"size":14432,"mtime":1608830419543,"results":"14","hashOfConfig":"9"},{"size":3583,"mtime":1608830480777,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1txlgvr",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"C:\\Users\\edwin\\Documents\\GitHub\\code\\react\\portfolio\\src\\index.js",[],["33","34"],"C:\\Users\\edwin\\Documents\\GitHub\\code\\react\\portfolio\\src\\reportWebVitals.js",[],"C:\\Users\\edwin\\Documents\\GitHub\\code\\react\\portfolio\\src\\App.js",[],"C:\\Users\\edwin\\Documents\\GitHub\\code\\react\\portfolio\\src\\components\\navbar.jsx",[],"C:\\Users\\edwin\\Documents\\GitHub\\code\\react\\portfolio\\src\\components\\footer.jsx",[],["35","36"],"C:\\Users\\edwin\\Documents\\GitHub\\code\\react\\portfolio\\src\\pages\\portfolio.jsx",[],"C:\\Users\\edwin\\Documents\\GitHub\\code\\react\\portfolio\\src\\pages\\weather.jsx",["37"],"import React, {useState} from 'react'\nimport './weather.css';\nimport Footer from '../components/footer'\nimport axios from 'axios';\n\nfunction Weather() {\n  const [info,setInfo]=useState(null)\n\n  function getCoords(){\n    navigator.geolocation.getCurrentPosition(getData)\n  }\n  async function getData(gps){\n    console.log('fetching data...')\n    let loc = gps.coords\n    let unit = 'imperial'\n    axios.defaults.baseURL = \"https://\" + window.location.hostname + \":9001\"\n    await axios.get(`api/${loc.longitude}&${loc.latitude}&${unit}`)\n    .catch((err)=>console.log(err))\n    .then((res)=>{\n      setInfo(res.data)\n    })\n    console.log('Done!')\n  }\n  function getIcon(){\n    let num=info.weather[0].id;\n    let ans=\"bx \"\n    if(num>=200&&num<300){ans+=\"bx-cloud-lightning\"}\n    else if(num>=300&&num<400){ans+=\"bx-cloud-light-rain\"}\n    else if(num>=500&&num<600){ans+=\"bx-cloud-rain\"}\n    else if(num>=600&&num<700){ans+=\"bx-cloud-snow\"}\n    else if(num>=700&&num<800){ans+=\"bx-water\"}\n    else if(num===800){if(getTime()){ans+=\"bx-sun\"}else{ans+=\"bx-moon\"}}\n    else if(num>=800&&num<900){ans+=\"bx-cloud\"}\n    else{if(getTime()){ans+=\"bx-sun\"}else{ans+=\"bx-moon\"}}\n    return ans\n  }\n  function getTime(){\n    let d = new Date().getHours()\n    if(info!== null){\n      let m = new Date(info.sys.sunrise*1000).getHours()\n      let n = new Date(info.sys.sunset*1000).getHours()\n      if(d<n && d>=m)return true\n      else return false\n    }\n  }\n  function currentTime(){\n    let d=new Date();\n    let wd=d.getDay()\n    let h =d.getHours()\n    let m =d.getMinutes()\n    let t ='AM'\n    switch(wd){\n      case 0:wd='Sunday';break;\n      case 1:wd='Monday';break;\n      case 2:wd='Tuesday';break;\n      case 3:wd='Wednesday';break;\n      case 4:wd='Thursday';break;\n      case 5:wd='Friday';break;\n      case 6:wd='Saturday';break;\n      default:wd='Some Day';break;\n    }\n    if(h>11){t='PM'}\n    if(h>12){h=(h-12)}\n    if(m<10){m='0'+m.toString()}\n    let str=wd+' '+h.toString()+':'+m+' '+t+''\n    return str\n  }\n  function checkNull(...i){\n    let line=[]\n    if(info!==null){\n      i.forEach((n)=>line.push(eval(n)))\n      return line\n    }\n  }\n  let dateTime=checkNull('info.name','info.sys.country')\n  return (\n    <>\n        <div className='wApp'>\n          <header className=\"App-header\">{(info!=null)?<h4>{dateTime[0]+', '+dateTime[1]} | {currentTime()}</h4>:''}</header>\n          {info!=null?\n            <main className='weatherBox'>\n              <div className=\"tempBox\">\n                <div className=\"iconS\"><i className={getIcon()}></i></div>\n                <div className=\"mainS\">{Math.round(info.main.temp)}째F</div>\n                <div className=\"middleS\">feels like {Math.round(info.main.feels_like)}째F\n                  <hr style={{backgroundColor:\"white\",opacity:\"20%\",width:\"90%\"}} />\n                </div>\n                <div className=\"bottomA\"><i className=\"bx bx-upvote\"></i> {Math.round(info.main.temp_max)}째F<br/><i className=\"bx bx-downvote\"></i> {Math.round(info.main.temp_min)}째F</div>\n                <div className=\"bottomB\"><i className=\"bx bx-droplet\"></i> {Math.round(info.main.humidity)}%<br/><i className=\"bx bx-wind\"></i> {Math.round(info.wind.speed)} MPH</div>\n              </div>\n            </main>\n          :\n            <><h5>Click the button below to take a look at today's weather forecast</h5><br/>\n            <button className=\"wBtn\" onClick={getCoords}><i className=\"refresh bx bx-refresh\"></i></button></>\n          }\n        </div>\n        <Footer color={['#040b14','white']} />\n    </>\n  );\n}\n\nexport default Weather;\n",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"38","replacedBy":"42"},{"ruleId":"40","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":71,"column":32,"nodeType":"46","messageId":"47","endLine":71,"endColumn":36},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],["48"],["49"],"no-eval","eval can be harmful.","CallExpression","unexpected","no-global-assign","no-unsafe-negation"]