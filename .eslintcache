[{"C:\\Users\\edwin\\Documents\\GitHub\\code\\portfolio\\src\\index.js":"1","C:\\Users\\edwin\\Documents\\GitHub\\code\\portfolio\\src\\App.js":"2","C:\\Users\\edwin\\Documents\\GitHub\\code\\portfolio\\src\\reportWebVitals.js":"3","C:\\Users\\edwin\\Documents\\GitHub\\code\\portfolio\\src\\components\\navbar.jsx":"4","C:\\Users\\edwin\\Documents\\GitHub\\code\\portfolio\\src\\pages\\portfolio.jsx":"5","C:\\Users\\edwin\\Documents\\GitHub\\code\\portfolio\\src\\components\\footer.jsx":"6","C:\\Users\\edwin\\Documents\\GitHub\\code\\portfolio\\src\\pages\\weather\\weather.jsx":"7","C:\\Users\\edwin\\Documents\\GitHub\\code\\portfolio\\src\\plugins\\localTime.js":"8"},{"size":610,"mtime":1608074609087,"results":"9","hashOfConfig":"10"},{"size":528,"mtime":1615782470550,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":2045,"mtime":1615783608844,"results":"13","hashOfConfig":"10"},{"size":14916,"mtime":1609841831547,"results":"14","hashOfConfig":"10"},{"size":549,"mtime":1608694012086,"results":"15","hashOfConfig":"10"},{"size":3253,"mtime":1615782955024,"results":"16","hashOfConfig":"10"},{"size":611,"mtime":1615781683456,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1hp2tje",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\edwin\\Documents\\GitHub\\code\\portfolio\\src\\index.js",[],["37","38"],"C:\\Users\\edwin\\Documents\\GitHub\\code\\portfolio\\src\\App.js",[],"C:\\Users\\edwin\\Documents\\GitHub\\code\\portfolio\\src\\reportWebVitals.js",[],"C:\\Users\\edwin\\Documents\\GitHub\\code\\portfolio\\src\\components\\navbar.jsx",[],"C:\\Users\\edwin\\Documents\\GitHub\\code\\portfolio\\src\\pages\\portfolio.jsx",[],"C:\\Users\\edwin\\Documents\\GitHub\\code\\portfolio\\src\\components\\footer.jsx",[],["39","40"],"C:\\Users\\edwin\\Documents\\GitHub\\code\\portfolio\\src\\pages\\weather\\weather.jsx",["41"],"import React, {useState} from 'react'\nimport './weather.css';\nimport Footer from '../../components/footer'\nimport axios from 'axios';\nimport {currentTime,weekDay} from '../../plugins/localTime.js'\nfunction Weather() {\n  const [info,setInfo]=useState(null)\n  const [spin,setSpin]=useState(\"\")\n\n  function getCoords(){\n    setSpin(\"Spin\")\n    navigator.geolocation.getCurrentPosition(getData)\n  }\n  async function getData(gps){\n    console.log('fetching data...')\n    let loc = gps.coords\n    let unit = 'imperial'\n    axios.defaults.baseURL = \"https://\" + window.location.hostname + \":9001\"\n    //await axios.get(`http://localhost:9001/api/${loc.longitude}&${loc.latitude}&${unit}`)\n    await axios.get(`api/${loc.longitude}&${loc.latitude}&${unit}`)\n    .catch((err)=>console.log(err))\n    .then((res)=>{\n      setInfo(res.data)\n    })\n    console.log('Done!')\n  }\n  function getIcon(){\n    let num=info.weather[0].id;\n    let ans=\"bx \"\n    if(num>=200&&num<300){ans+=\"bx-cloud-lightning\"}\n    else if(num>=300&&num<400){ans+=\"bx-cloud-light-rain\"}\n    else if(num>=500&&num<600){ans+=\"bx-cloud-rain\"}\n    else if(num>=600&&num<700){ans+=\"bx-cloud-snow\"}\n    else if(num>=700&&num<800){ans+=\"bx-water\"}\n    else if(num===800){if(getTime()){ans+=\"bx-sun\"}else{ans+=\"bx-moon\"}}\n    else if(num>=800&&num<900){ans+=\"bx-cloud\"}\n    else{if(getTime()){ans+=\"bx-sun\"}else{ans+=\"bx-moon\"}}\n    return ans\n  }\n  function getTime(){\n    let d = new Date().getHours()\n    if(info!== null){\n      let m = new Date(info.sys.sunrise*1000).getHours()\n      let n = new Date(info.sys.sunset*1000).getHours()\n      if(d<n && d>=m)return true\n      else return false\n    }\n  }\n  function checkNull(...i){\n    let line=[]\n    if(info!==null){\n      i.forEach((n)=>line.push(eval(n)))\n      return line\n    }\n  }\n  let dateTime=checkNull('info.name','info.sys.country')\n  return (\n    <>\n        <div className='wApp'>\n          <header className=\"App-header\">{(info!=null)?<h4>{dateTime[0]+', '+dateTime[1]} | {weekDay()+' '+currentTime()}</h4>:''}</header>\n          {info!=null?\n            <main className='weatherBox'>\n              <div className=\"tempBox\">\n                <div className=\"iconS\"><i className={getIcon()}></i></div>\n                <div className=\"mainS\">{Math.round(info.main.temp)}째F</div>\n                <div className=\"middleS\">feels like {Math.round(info.main.feels_like)}째F\n                  <hr style={{backgroundColor:\"white\",opacity:\"20%\",width:\"90%\"}} />\n                </div>\n                <div className=\"bottomA\"><i className=\"bx bx-upvote\"></i> {Math.round(info.main.temp_max)}째F<br/><i className=\"bx bx-downvote\"></i> {Math.round(info.main.temp_min)}째F</div>\n                <div className=\"bottomB\"><i className=\"bx bx-droplet\"></i> {Math.round(info.main.humidity)}%<br/><i className=\"bx bx-wind\"></i> {Math.round(info.wind.speed)} MPH</div>\n              </div>\n            </main>\n          :\n            <><h5>Click the button below to take a look at today's weather forecast</h5><br/>\n            <button className=\"wBtn\" onClick={getCoords}><i className={\"refresh \"+spin+\" bx bx-refresh\"}></i></button></>\n          }\n        </div>\n        <Footer color={['#040b14','white']} />\n    </>\n  );\n}\n\nexport default Weather;\n","C:\\Users\\edwin\\Documents\\GitHub\\code\\portfolio\\src\\plugins\\localTime.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"42","replacedBy":"46"},{"ruleId":"44","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":52,"column":32,"nodeType":"50","messageId":"51","endLine":52,"endColumn":36},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],["52"],["53"],"no-eval","eval can be harmful.","CallExpression","unexpected","no-global-assign","no-unsafe-negation"]